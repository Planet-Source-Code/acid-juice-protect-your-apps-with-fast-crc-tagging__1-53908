Very simple example on CRC checks on file. Program allows to add patching protection to an executable file. It consists of two different projects: the APPLY project which is a program that computes the CRC and adds a tag to the main file you want to protect, and the MAIN project which is the file that is to be protected. This code combines the wonderful fast CRC-computation class of Fredrik Qvarfort with the original idea of Detonate (which unfortunately is just too slow on files over 1MB), so please give them all the credits. this is just a simple implementation.


To see it go:

1. run the project in the /MAIN folder. Compile the file, it will be called MyProject.exe.

2. run MyProject.exe. you will see that it will state that NO CRC SIGNATURE WAS FOUND.

3. run the project in the /APPLY folder. Click on the Apply CRC button, and browse for the file you have just compiled (MyProject.exe).

4. run again MyProject.exe. you will see that it will state that FILE IS OK.


Now, if file MyProject.exe was to be patched with an hex editor (the way crackers would do), the CRC signature will differ from the computed one and therefore the program will know that it has been patched.

To implement in your project, just add the MyCRCmod.bas module to your project, and call the function IsIntegrityOk which is the only part that need customization.


Acid Juice.